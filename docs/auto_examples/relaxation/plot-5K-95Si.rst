
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/relaxation/plot-5K-95Si.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_relaxation_plot-5K-95Si.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_relaxation_plot-5K-95Si.py:


0.05 K2O â€¢ 0.95 SiO2 MAS-ETA
=============================

.. GENERATED FROM PYTHON SOURCE LINES 8-12

The following example is an application of the statistical learning method in
determining the distribution of the Si-29 echo train decay constants in glasses.

Import all relevant packages.

.. GENERATED FROM PYTHON SOURCE LINES 12-29

.. code-block:: default

    import csdmpy as cp
    import matplotlib.pyplot as plt
    import numpy as np

    from mrinversion.kernel import relaxation
    from mrinversion.linear_model import LassoFistaCV, TSVDCompression

    plt.rcParams['pdf.fonttype'] = 42   # For using plots in Illustrator

    def plot2D(csdm_object, **kwargs):
        plt.figure(figsize=(4, 3))
        csdm_object.plot(**kwargs)
        plt.tight_layout()
        plt.show()










.. GENERATED FROM PYTHON SOURCE LINES 31-38

Dataset setup
-------------

Import the dataset
''''''''''''''''''

Load the dataset as a CSDM data-object.

.. GENERATED FROM PYTHON SOURCE LINES 38-53

.. code-block:: default


    # The 2D MAF dataset in csdm format

    domain = "https://www.ssnmr.org/sites/default/files/mrsimulator"
    filename = f"{domain}/MAS_SE_PIETA_5%25K2O_FT.csdf"
    data_object = cp.load(filename)

    # Inversion only requires the real part of the complex dataset.
    data_object = data_object.real
    sigma = 1085.251  # data standard deviation

    # Convert the MAS dimension from Hz to ppm.
    data_object.dimensions[0].to("ppm", "nmr_frequency_ratio")
    plot2D(data_object,cmap="gist_ncar_r")




.. image-sg:: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_001.png
   :alt: plot 5K 95Si
   :srcset: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 54-56

Prepping the data for inversion
'''''''''''''''''''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 56-60

.. code-block:: default

    data_object = data_object.T
    data_object_truncated = data_object[:, 1220:-1220]
    plot2D(data_object_truncated,cmap="gist_ncar_r")




.. image-sg:: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_002.png
   :alt: plot 5K 95Si
   :srcset: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 61-65

Linear Inversion setup
----------------------
Dimension setup
'''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: default

    data_object_truncated.dimensions[0].to("s")  # set coordinates to 's'
    kernel_dimension = data_object_truncated.dimensions[0]








.. GENERATED FROM PYTHON SOURCE LINES 69-71

Generating the kernel
'''''''''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 71-80

.. code-block:: default

    relaxT2 = relaxation.T2(
        kernel_dimension=kernel_dimension,
        inverse_dimension=dict(
            count=32, minimum="1e-3 s", maximum="1e4 s", scale="log", label="log (T2 / s)"
        ),
    )
    inverse_dimension = relaxT2.inverse_dimension
    K = relaxT2.kernel(supersampling=20)








.. GENERATED FROM PYTHON SOURCE LINES 81-83

Data Compression
''''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 83-89

.. code-block:: default

    new_system = TSVDCompression(K, data_object_truncated)
    compressed_K = new_system.compressed_K
    compressed_s = new_system.compressed_s

    print(f"truncation_index = {new_system.truncation_index}")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    compression factor = 1.3333333333333333
    truncation_index = 18




.. GENERATED FROM PYTHON SOURCE LINES 90-94

Solving the inverse problem
---------------------------
FISTA LASSO cross-validation
'''''''''''''''''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 94-109

.. code-block:: default


    # setup the pre-defined range of alpha and lambda values
    lambdas = 10 ** (-4 + 5 * (np.arange(32) / 31))

    # setup the smooth lasso cross-validation class
    s_lasso = LassoFistaCV(
        lambdas=lambdas,  # A numpy array of lambda values.
        sigma=sigma,  # data standard deviation
        folds=5,  # The number of folds in n-folds cross-validation.
        inverse_dimension=inverse_dimension,  # previously defined inverse dimensions.
    )

    # run the fit method on the compressed kernel and compressed data.
    s_lasso.fit(K=compressed_K, s=compressed_s)








.. GENERATED FROM PYTHON SOURCE LINES 110-112

The optimum hyper-parameters
''''''''''''''''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 112-114

.. code-block:: default

    print(s_lasso.hyperparameters)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    {'lambda': 0.08002502278161053}




.. GENERATED FROM PYTHON SOURCE LINES 115-117

The cross-validation curve
''''''''''''''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 117-122

.. code-block:: default

    plt.figure(figsize=(4, 3))
    s_lasso.cv_plot()
    plt.tight_layout()
    plt.show()




.. image-sg:: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_003.png
   :alt: plot 5K 95Si
   :srcset: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 123-125

The optimum solution
''''''''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 125-142

.. code-block:: default

    f_sol = s_lasso.f

    levels = np.arange(15) / 15 + 0.1
    plt.figure(figsize=(3.85, 2.75))  # set the figure size
    ax = plt.subplot(projection="csdm")
    cb=ax.contourf(f_sol / f_sol.max(), levels=levels, cmap="jet_r")
    ax.set_ylim(-70, -130)
    ax.set_xlim(-3, 2)
    plt.title("5K:95Si")
    ax.set_xlabel("$\log(\lambda^{-1}\,/\,$s)")
    ax.set_ylabel("Frequency / ppm")
    plt.grid(linestyle="--", alpha=0.75)
    plt.colorbar(cb,ticks=[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1.0,1.1])
    plt.tight_layout()
    plt.savefig("5K-95Si.pdf")
    plt.show()




.. image-sg:: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_004.png
   :alt: 5K:95Si
   :srcset: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 143-145

The fit residuals
'''''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 145-148

.. code-block:: default

    residuals = s_lasso.residuals(K=K, s=data_object_truncated)
    plot2D(residuals,cmap="gist_ncar_r")




.. image-sg:: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_005.png
   :alt: plot 5K 95Si
   :srcset: /auto_examples/relaxation/images/sphx_glr_plot-5K-95Si_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 149-150

The standard deviation of the residuals is

.. GENERATED FROM PYTHON SOURCE LINES 150-152

.. code-block:: default

    residuals.std()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Quantity 1312.98434274>



.. GENERATED FROM PYTHON SOURCE LINES 153-155

Saving the solution
'''''''''''''''''''

.. GENERATED FROM PYTHON SOURCE LINES 155-156

.. code-block:: default

    f_sol.save("5K-95Si-T2_inverse.csdf")  # save the solution
    residuals.save("5K-95Si-T2-residue.csdf")  # save the residuals







.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.964 seconds)


.. _sphx_glr_download_auto_examples_relaxation_plot-5K-95Si.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/DeepanshS/mrinversion/master?urlpath=lab/tree/docs/_build/html/../../notebooks/auto_examples/relaxation/plot-5K-95Si.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot-5K-95Si.py <plot-5K-95Si.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot-5K-95Si.ipynb <plot-5K-95Si.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
