# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  code_lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=B,C,E,F,W,T,N8 --ignore=E203 --max-line-length=88 --show-source --statistics --exclude="examples/* docs/* build/* utils.py"
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics --exclude="examples/* docs/* build/* utils.py"

  testing_unix:
    needs: [code_lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools
          pip install -r requirements-dev.txt

      - name: Build and install package from source
        run: python setup.py develop

      - name: Test with pytest
        run: pytest --cov=./ --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v5.0.5

  # test-windows:
  #   needs: [code_lint]
  #   runs-on: "windows-latest"
  #   strategy:
  #     matrix:
  #       python-version: ["3.10", "3.11"]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install dependencies
  #       run: |
  #         C:\msys64\pacman -S mingw-w64-x86_64-openblas
  #         python -m pip install --upgrade pip
  #         pip install setuptools
  #         pip install -r requirements-dev.txt

  #     - name: Build and install package from source
  #       run: python setup.py develop

  #     - name: Test with pytest
  #       run: pytest --cov=./ --cov-report=xml

  #     - name: Upload coverage
  #       uses: codecov/codecov-action@v5.0.5

  testing_mac_intel:
    needs: [code_lint]
    runs-on: "macos-13"
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          brew install gfortran
          python -m pip install --upgrade pip
          pip install setuptools
          pip install -r requirements-dev.txt

      - name: Build and install package from source
        run: python setup.py develop

      - name: Test with pytest
        run: pytest --cov=./ --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v5.0.5
